" 参考 https://github.com/kami-zh/dotfiles/blob/master/.vimrc

"
" dein.vim
"

let s:dein_dir = expand('~/.vim/dein')
let s:dein_repo_dir = s:dein_dir . '/repos/github.com/Shougo/dein.vim'

if &compatible
  set nocompatible
endif

if !isdirectory(s:dein_repo_dir)
  execute '!git clone git@github.com:Shougo/dein.vim.git' s:dein_repo_dir
endif

execute 'set runtimepath^=' . s:dein_repo_dir

call dein#begin(s:dein_dir)


" ctagsの生成を自動化
call dein#add('soramugi/auto-ctags.vim')

" jkの移動を早くする
call dein#add('rhysd/accelerated-jk')

" Unite.vimで最近使っていたファイルを表示できるようにする
call dein#add('Shougo/neomru.vim')

" ファイルをtree表示にしてくれる
call dein#add('scrooloose/nerdtree')
call dein#add('jistr/vim-nerdtree-tabs')

" nedtreeの横にgitのステータスを表示
call dein#add('Xuyuanp/nerdtree-git-plugin')

" Gitを便利に使う
call dein#add('tpope/vim-fugitive')

" Rails向けのコマンドを提供する
call dein#add('tpope/vim-rails')

" Ruby向けにendを自動挿入してくれる
call dein#add('tpope/vim-endwise',          { 'on_i': 1 })

" コメントのon/offを手軽に実行
call dein#add('tomtom/tcomment_vim')

" シングルクォートとダブルクォートの入れ替え
call dein#add('tpope/vim-surround')

" インデントに色をつけて見やすくする
call dein#add('nathanaelkane/vim-indent-guides')

" ログ・ファイルに色付けしてくれる
call dein#add('vim-scripts/AnsiEsc.vim')

" オートセーブしてくれる
call dein#add('vim-scripts/vim-auto-save')

" 行末の半角スペースの可視化
"call dein#add('bronson/vim-trailing-whitespace')

" less用のsyntaxハイライト
call dein#add('KohPoll/vim-less')

" tags
call dein#add('szw/vim-tags')

" atomのonedarkのカラースキーマを使うために
call dein#add('joshdick/onedark.vim')

" ファイルに変更が加わった際にvimの行の所に「+」「-」
call dein#add('airblade/vim-gitgutter')

" ステータスバーやタブバーをカスタマイズ
call dein#add('vim-airline/vim-airline')

" インデントの深さを視覚的にわかりやすくする
call dein#add('Yggdroot/indentLine')

" プロジェクト内のファイルやバッファ、履歴から検索する事ができる
call dein#add('ctrlpvim/ctrlp.vim')

" ソースコードを実行し、その結果をVimで表示することが出来る
call dein#add('thinca/vim-quickrun')

" ドキュメントコメントの追加・削除を簡単に行えるようにする
call dein#add('tyru/caw.vim')

" カーソル下URLをブラウザで開いたり、単語を検索したりすることが出来る
call dein#add('tyru/open-browser.vim')

" vim-airlineの配色を元にtmuxのカラースキーマを生成
call dein#add('edkolev/tmuxline.vim')

" 自動補完プラグイン
call dein#add('Shougo/neocomplete.vim',     { 'on_i': 1 })

" スニペット機能を提供します。
call dein#add('Shougo/neosnippet.vim',      { 'on_i': 1 })

" neosnippet.vimのためのスニペット集
call dein#add('Shougo/neosnippet-snippets', { 'on_i': 1 })

" カッコ (( や { などを入力すると、自動で閉じカッコ
call dein#add('Townk/vim-autoclose',        { 'on_i': 1 })

" Rubyのコード補完機能を提供
call dein#add('osyo-manga/vim-monster',     { 'on_ft': 'ruby' })

" Rubyのローカル変数をハイライト表示する
call dein#add('todesking/ruby_hl_lvar.vim', { 'on_ft': 'ruby' })

"
call dein#add('pangloss/vim-javascript',    { 'on_ft': 'javascript' })

"
call dein#add('mxw/vim-jsx',                { 'on_ft': 'javascript' })


call dein#end()

if dein#check_install()
  call dein#install()
endif


filetype plugin indent on


"
" Pluginの設定
"

" 'soramugi/auto-ctags.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:auto_ctags = 1
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'rhysd/accelerated-jk'
nmap j <Plug>(accelerated_jk_gj)
nmap k <Plug>(accelerated_jk_gk)

" 'Shougo/unite.vim'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" http://blog.remora.cx/2010/12/vim-ref-with-unite.html
" 入力モードで開始する
"----------------------------------------------------------------
let g:unite_enable_start_insert=1
" バッファ一覧
noremap <C-P> :Unite buffer<CR>
" ファイル一覧
noremap <C-N> :Unite -buffer-name=file file<CR>
" 最近使ったファイルの一覧
noremap <C-Z> :Unite file_mru<CR>
" sourcesを「今開いているファイルのディレクトリ」とする
noremap :uff :<C-u>UniteWithBufferDir file -buffer-name=file<CR>
" ウィンドウを分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
au FileType unite inoremap <silent> <buffer> <expr> <C-J> unite#do_action('split')
" ウィンドウを縦に分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
au FileType unite inoremap <silent> <buffer> <expr> <C-K> unite#do_action('vsplit')
" ESCキーを2回押すと終了する
au FileType unite nnoremap <silent> <buffer> <ESC><ESC> :q<CR>
au FileType unite inoremap <silent> <buffer> <ESC><ESC> <ESC>:q<CR>
"-------------------------------------------------------------------

" 挿入モード時、ステータスラインの色を変更
"-----------------------------------------------------------------
let g:hi_insert = 'highlight StatusLine guifg=darkblue guibg=darkyellow gui=none ctermfg=blue ctermbg=yellow cterm=none'

if has('syntax')
  augroup InsertHook
    autocmd!
    autocmd InsertEnter * call s:StatusLine('Enter')
    autocmd InsertLeave * call s:StatusLine('Leave')
  augroup END
endif

let s:slhlcmd = ''
function! s:StatusLine(mode)
  if a:mode == 'Enter'
    silent! let s:slhlcmd = 'highlight ' . s:GetHighlight('StatusLine')
    silent exec g:hi_insert
  else
    highlight clear StatusLine
    silent exec s:slhlcmd
  endif
endfunction

function! s:GetHighlight(hi)
  redir => hl
  exec 'highlight '.a:hi
  redir END
  let hl = substitute(hl, '[\r\n]', '', 'g')
  let hl = substitute(hl, 'xxx', '', '')
  return hl
endfunction
"----------------------------------------------------------------

" 最後のカーソルの位置を復元
"-----------------------------------------------------------------
if has("autocmd")
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line ("'\"") <= line("$") |
    \   exe "normal! g'\"" |
    \ endif
endif
"------------------------------------------------------------------
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'Shougo/neomru.vim'

" 'scrooloose/nerdtree'
" 'jistr/vim-nerdtree-tabs'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let NERDTreeShowHidden = 1

if argc() == 0
  let g:nerdtree_tabs_open_on_console_startup = 1
end
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'nerdtree-git-plugin'

" 'tpope/vim-fugitive'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:airline#extensions#branch#enabled = 1
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'tpope/vim-rails'

" 'tpope/vim-endwise'

" 'tomtom/tcomment_vim'

" 'tpope/vim-surround'

" 'nathanaelkane/vim-indent-guides'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vimを立ち上げたときに、自動的にvim-indent-guidesをオンにする
let g:indent_guides_enable_on_vim_startup = 1
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'vim-scripts/AnsiEsc.vim'

" 'vim-scripts/vim-auto-save'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:auto_save = 1
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'bronson/vim-trailing-whitespace'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"autocmd BufWritePre * :FixWhitespace
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'KohPoll/vim-less'

" 'szw/vim-tags'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:vim_tags_project_tags_command = "/usr/local/bin/ctags -f .tags -R . 2>/dev/null"
let g:vim_tags_gems_tags_command = "/usr/local/bin/ctags -R -f .Gemfile.lock.tags `bundle show --paths` 2>/dev/null"
set tags+=.tags
set tags+=.Gemfile.lock.tags
" tagsジャンプの時に複数ある時は一覧表示
nnoremap <C-]> g<C-]>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'joshdick/onedark.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" one darkを有効にするために必須
let g:onedark_termcolors=16
let g:airline_theme='onedark'
" カラースキーマを宣言する
colorscheme onedark
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'airblade/vim-gitgutter'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:gitgutter_map_keys = 0
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'vim-airline/vim-airline'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set encoding=utf-8
"let g:airline_powerline_fonts = 1
"let g:airline#extensions#tabline#enabled = 1
"let g:airline#extensions#tabline#show_buffers = 0
"let g:airline#extensions#tabline#show_close_button = 0
"let g:airline#extensions#tabline#show_splits = 0
"let g:airline#extensions#tabline#show_tab_type = 0
"----------------------------------------------------------
" フォントの設定
" 参考)https://github.com/pixyzehn/dotfiles/blob/master/.vimrc
set guifont=Sauce\ Code\ Powerline\Regular-Powerline:h14
let g:Powerline_symbols = 'fancy'
set t_Co=256
" 参考 https://github.com/vim-airline/vim-airline/blob/master/doc/airline.txt

let g:airline_powerline_fonts = 1

" これがないとairline_symbols.hogeで設定する奴が設定できなくなる
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif

let g:airline_left_sep = '⮀'
let g:airline_left_alt_sep = '⮁'
let g:airline_right_sep = '⮂'
let g:airline_right_alt_sep = '⮃'
let g:airline_symbols.crypt = '🔒'
let g:airline_symbols.linenr = '☰'
let g:airline_symbols.linenr = '␊'
let g:airline_symbols.linenr = '␤'
let g:airline_symbols.linenr = '¶'
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.maxlinenr = '㏑'
let g:airline_symbols.paste = 'ρ'
let g:airline_symbols.paste = 'Þ'
let g:airline_symbols.paste = '∥'
let g:airline_symbols.spell = 'Ꞩ'
let g:airline_symbols.notexists = '∄'
let g:airline_symbols.whitespace = 'Ξ'
let g:airline_symbols.branch = '⭠'
let g:airline_symbols.readonly = '⭤'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'Yggdroot/indentLine'

" 'ctrlpvim/ctrlp.vim'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap <Leader>f :CtrlP<CR>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'thinca/vim-quickrun'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'tyru/caw.vim'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <Leader>/ <Plug>(caw:zeropos:toggle)
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'tyru/open-browser.vim'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <Leader>b <Plug>(openbrowser-smart-search)
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'edkolev/tmuxline.vim'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" http://post.simplie.jp/posts/56
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'Shougo/neocomplete.vim'
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:neocomplete#enable_at_startup = 1
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'Shougo/neosnippet.vim'

" 'Shougo/neosnippet-snippets'

" 'Townk/vim-autoclose'

" 'osyo-manga/vim-monster'
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:neocomplete#sources#omni#input_patterns = {
\  'ruby': '[^. *\t]\.\w*\|\h\w*::'
\}
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" 'todesking/ruby_hl_lvar.vim'

"'pangloss/vim-javascript'

"'mxw/vim-jsx'

















